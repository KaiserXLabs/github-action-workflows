name: Package and push helm chart

on:
  workflow_call:
    inputs:
      registry_name:
        required: true
        type: string
      release_created:
        required: true
        type: boolean
      version_tag:
        required: true
        type: string
      registry_url_path:
        required: false
        type: string
      image_tag_value_property_path: # deprecated
        required: false
        type: string
      image_tag_property_path:
        required: false
        type: string
      helm_chart_root_path:
        required: false
        type: string
        default: charts
      image_repository:
        required: false
        type: string
      image_repository_property_path:
        required: false
        type: string
        default: image.repository
    outputs:
      chart_tag:
        description: "Either the version_tag-short SHA if release_created is false or version_tag"
        value: ${{ jobs.packageAndPushHelmChart.outputs.chart_tag }}
    secrets:
      registry_username:
        required: true
      registry_password:
        required: true

jobs:
  packageAndPushHelmChart:
    name: "Package and push helm chart"
    runs-on: ubuntu-20.04
    outputs:
      chart_tag: ${{ steps.chart_tag.outputs.value }}
    steps:
    
    - uses: actions/checkout@v3
    - name: Helm login
      run: echo ${{ secrets.registry_password }} | helm registry login ${{ inputs.registry_name }} --username ${{ secrets.registry_username }} --password-stdin

    - id: short_sha
      run: echo "::set-output name=value::$(git rev-parse --short ${{ github.sha }})"

    - id: chart_tag
      run: echo "::set-output name=value::${{ inputs.release_created && inputs.version_tag || format('{0}-{1}', inputs.version_tag, steps.short_sha.outputs.value) }}"

    - name: Run read-yaml action
      id: chart-name
      uses: KJ002/read-yaml@main
      with:
        file: "${{ inputs.helm_chart_root_path }}/Chart.yaml"
        key-path: '["name"]'

    - name: Update app version
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: "${{ inputs.helm_chart_root_path }}/Chart.yaml"
        propertyPath: 'appVersion'
        value: "${{ steps.chart_tag.outputs.value }}"
        commitChange: false
        updateFile: true

    - name: Update chart version
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: "${{ inputs.helm_chart_root_path }}/Chart.yaml"
        propertyPath: 'version'
        value: "${{ steps.chart_tag.outputs.value }}"
        commitChange: false
        updateFile: true

    - name: Update image tag
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: "${{ inputs.helm_chart_root_path }}/values.yaml"
        propertyPath: "${{ inputs.image_tag_property_path || inputs.image_tag_value_property_path || 'global.image.tag' }}"
        value: "${{ inputs.release_created && steps.chart_tag.outputs.value || steps.short_sha.outputs.value }}"
        commitChange: false
        updateFile: true

    - name: Update image repository if set
      if: ${{ inputs.image_repository_property_path && inputs.image_repository }}
      uses: fjogeleit/yaml-update-action@main
      with:
        valueFile: "${{ inputs.helm_chart_root_path }}/values.yaml"
        propertyPath: "${{ inputs.image_repository_property_path }}"
        value: "${{ inputs.image_repository }}"
        commitChange: false
        updateFile: true

    - run: helm package ${{ inputs.helm_chart_root_path }}

    - run: "helm push ${{ steps.chart-name.outputs.data }}-${{ steps.chart_tag.outputs.value }}.tgz oci://${{ inputs.registry_name }}${{ inputs.registry_url_path || '/helm' }}" 

